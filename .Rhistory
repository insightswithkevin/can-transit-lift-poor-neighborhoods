geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment_2013_2022, yend = after_treatment_2013_2022 - -0.067, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment_2013_2022 - -0.067, yend = after_treatment_2013_2022, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Log. Medianhaushaltseinkommen vor und nach der E-Line Erweiterung - Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Log. Medianhaushaltseinkommen",
color = "Gruppe",
linetype = "Effekt"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 17)
)
treatment_plot_medhinc_2013_2022
treatment_plot_medhinc_2013_2022 <- ggplot(data = diffs_2013_2022, aes(x = after_2013, y = mean_log_medhinc, color = factor(treatment))) +
geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment_2013_2022, yend = after_treatment_2013_2022 - -0.067, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment_2013_2022 - -0.067, yend = after_treatment_2013_2022, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Log. Medianhaushaltseinkommen vor und nach der E-Line Erweiterung - Block Groups im Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Log. Medianhaushaltseinkommen",
color = "Gruppe",
linetype = "Effekt"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 17)
)
treatment_plot_medhinc_2013_2022
treatment_plot_medhinc_2013_2022
diffs_2013_2022 <- appended_df %>%
group_by(after_2013, treatment) %>%
summarize(mean_low_inc = mean(low_inc_hh))
before_treatment_2013_2022 <- diffs_2013_2022 %>%
filter(after_2013 == 0, treatment == 1) %>%
pull(mean_low_inc)
before_control_2013_2022 <- diffs_2013_2022 %>%
filter(after_2013 == 0, treatment == 0) %>%
pull(mean_low_inc)
after_treatment_2013_2022 <- diffs_2013_2022 %>%
filter(after_2013 == 1, treatment == 1) %>%
pull(mean_low_inc)
after_control_2013_2022 <- diffs_2013_2022 %>%
filter(after_2013 == 1, treatment == 0) %>%
pull(mean_low_inc)
diff_treatment_before_after_2013_2022 <- after_treatment_2013_2022 - before_treatment_2013_2022
diff_control_before_after_2013_2022 <- after_control_2013_2022 - before_control_2013_2022
diff_diff_2013_2022 <- diff_treatment_before_after_2013_2022 - diff_control_before_after_2013_2022
treatment_plot_low_inc_2013_2022 <- ggplot(data = diffs_2013_2022, aes(x = after_2013, y = mean_low_inc, color = factor(treatment))) +
geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment_2013_2022, yend = after_treatment_2013_2022 - 0.010, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment_2013_2022 - 0.010, yend = after_treatment_2013_2022, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Anteil einkommensschwacher Haushalte vor und nach der E-Line Erweiterung - Block Groups im Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Anteil einkommensschwacher Haushalte (in %) ",
color = "Gruppe",
linetype = "Effekte"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 16)
)
treatment_plot_low_inc_2013_2022
treatment_plot_low_inc_2013_2022
library(tidycensus)
library(tidyverse)
library(tmap)
library(sf)
library(here)
library(MatchIt)
library(optmatch)
library(cobalt)
library(readr)
library(modelsummary)
library(broom)
library(hrbrthemes)
library(extrafont)
library(ggthemes)
library(ggplot2)
library(ggpubr)
here()
library(tidycensus)
library(tidyverse)
library(tmap)
library(sf)
library(here)
library(MatchIt)
library(optmatch)
library(cobalt)
library(readr)
library(modelsummary)
library(broom)
library(hrbrthemes)
library(extrafont)
library(ggthemes)
library(ggplot2)
library(ggpubr)
here()
appended_df <- st_read(here("data/block groups/outputs/appended_df.shp"))
appended_df <- appended_df %>%
select(GEOID, NAME, geometry, year, treatment = tretmnt, distance = distanc,
weights, subclass = subclss, medhinc_block = mdhnc_b, medhinc_county = mdhnc_c,
medhinc_ratio_block = mdhnc__, income_quintiles = incm_qn, unemployment_rate = unmply_,
low_inc_hh = lw_nc_h, total_pop = totl_pp, median_age = medin_g, median_rent = mdn_rnt,
distance_centroid_cbd = dstnc__, after_2013 = af_2013)
appended_df <- appended_df %>%
mutate(log_medhinc_block = log(medhinc_block))
appended_df$year <- as.factor(appended_df$year)
appended_df$treatment <- as.factor(appended_df$treatment)
diffs <- appended_df %>%
group_by(after_2013, treatment) %>%
summarize(mean_log_medhinc = mean(log_medhinc_block))
before_treatment <- diffs %>%
filter(after_2013 == 0, treatment == 1) %>%
pull(mean_log_medhinc)
before_control <- diffs %>%
filter(after_2013 == 0, treatment == 0) %>%
pull(mean_log_medhinc)
after_treatment <- diffs %>%
filter(after_2013 == 1, treatment == 1) %>%
pull(mean_log_medhinc)
after_control <- diffs %>%
filter(after_2013 == 1, treatment == 0) %>%
pull(mean_log_medhinc)
diff_treatment_before_after <- after_treatment - before_treatment
diff_control_before_after <- after_control - before_control
diff_diff <- diff_treatment_before_after - diff_control_before_after
treatment_plot_medhinc <- ggplot(data = diffs, aes(x = after_2013, y = mean_log_medhinc, color = factor(treatment))) +
geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment, yend = after_treatment - -0.067, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment - -0.067, yend = after_treatment, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Log. Medianhaushaltseinkommen vor und nach der E-Line Erweiterung - Block Groups im Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Log. Medianhaushaltseinkommen",
color = "Gruppe",
linetype = "Effekt"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 17)
)
treatment_plot_medhinc
diffs <- appended_df %>%
group_by(after_2013, treatment) %>%
summarize(mean_low_inc = mean(low_inc_hh))
before_treatment <- diffs %>%
filter(after_2013 == 0, treatment == 1) %>%
pull(mean_low_inc)
before_control <- diffs %>%
filter(after_2013 == 0, treatment == 0) %>%
pull(mean_low_inc)
after_treatment <- diffs %>%
filter(after_2013 == 1, treatment == 1) %>%
pull(mean_low_inc)
after_control <- diffs %>%
filter(after_2013 == 1, treatment == 0) %>%
pull(mean_low_inc)
diff_treatment_before_after <- after_treatment - before_treatment
diff_control_before_after <- after_control - before_control
diff_diff <- diff_treatment_before_after - diff_control_before_after
treatment_plot_low_inc <- ggplot(data = diffs, aes(x = after_2013, y = mean_low_inc, color = factor(treatment))) +
geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment, yend = after_treatment - 0.010, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment - 0.010, yend = after_treatment, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Anteil einkommensschwacher Haushalte vor und nach der E-Line Erweiterung - Block Groups im Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Anteil einkommensschwacher Haushalte (in %) ",
color = "Gruppe",
linetype = "Effekte"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 16)
)
treatment_plot_low_inc
library(tidycensus)
library(tidyverse)
library(tmap)
library(sf)
library(here)
library(MatchIt)
library(optmatch)
library(cobalt)
library(readr)
library(modelsummary)
library(broom)
library(hrbrthemes)
library(extrafont)
library(ggthemes)
library(ggplot2)
library(ggpubr)
here()
appended_df <- st_read(here("data/block groups/outputs/appended_df.shp"))
appended_df <- appended_df %>%
select(GEOID, NAME, geometry, year, treatment = tretmnt, distance = distanc,
weights, subclass = subclss, medhinc_block = mdhnc_b, medhinc_county = mdhnc_c,
medhinc_ratio_block = mdhnc__, income_quintiles = incm_qn, unemployment_rate = unmply_,
low_inc_hh = lw_nc_h, total_pop = totl_pp, median_age = medin_g, median_rent = mdn_rnt,
distance_centroid_cbd = dstnc__, after_2013 = af_2013)
appended_df <- appended_df %>%
mutate(log_medhinc_block = log(medhinc_block))
appended_df$year <- as.factor(appended_df$year)
appended_df$treatment <- as.factor(appended_df$treatment)
appended_df_treated <- appended_df %>%
filter(treatment == 1)
t.test(unemployment_rate ~ after_2013, data = appended_df_treated)
appended_df_control <- appended_df %>%
filter(treatment == 0)
t.test(unemployment_rate ~ after_2013, data = appended_df_control)
# Median household income
model_medhinc <- lm(log_medhinc_block ~ treatment + after_2013 + (treatment * after_2013)
+ unemployment_rate + median_age + total_pop + median_rent + distance_centroid_cbd,
data = appended_df)
tidy(model_medhinc)
# Share of low-income households
model_low_inc <- lm(low_inc_hh ~ treatment + after_2013 + (treatment * after_2013) +
+ unemployment_rate + median_age + total_pop + median_rent + distance_centroid_cbd,
data = appended_df)
tidy(model_low_inc)
# Median Household Income
model_medhinc_treated_blocks <- lm(log_medhinc_block ~ after_2013 + unemployment_rate + median_age +
total_pop + median_rent + distance_centroid_cbd,
data = appended_df_treated)
tidy(model_medhinc_treated_blocks)
# Share of low-income household
model_low_inc_treated_blocks <- lm(low_inc_hh ~ after_2013 + unemployment_rate + median_age + total_pop +
median_rent + distance_centroid_cbd, data = appended_df_treated)
tidy(model_low_inc_treated_blocks)
library(tidycensus)
library(tidyverse)
library(tmap)
library(sf)
library(here)
library(MatchIt)
library(optmatch)
library(cobalt)
library(readr)
library(modelsummary)
library(broom)
library(hrbrthemes)
library(extrafont)
library(ggthemes)
library(ggplot2)
library(ggpubr)
here()
appended_df <- st_read(here("data/census tracts/outputs/appended_df.shp"))
appended_df <- appended_df %>%
select(GEOID, NAME, geometry, year, treatment = tretmnt, distance = distanc,
weights, subclass = subclss, medhinc_tract = mdhnc_t, medhinc_county = mdhnc_c,
medhinc_ratio_tract = mdhnc__, income_quintiles = incm_qn, high_inc_mobility = hgh_nc_,
high_education = hgh_dct, unemployment_rate = unmply_,
low_inc_hh = lw_nc_h, total_pop = totl_pp, median_age = medin_g, median_rent = mdn_rnt,
distance_centroid_cbd = dstnc__, after_2013 = af_2013)
appended_df <- appended_df %>%
mutate(log_medhinc_tract = log(medhinc_tract))
appended_df$year <- as.factor(appended_df$year)
appended_df$treatment <- as.factor(appended_df$treatment)
diffs <- appended_df %>%
group_by(after_2013, treatment) %>%
summarize(mean_log_medhinc = mean(log_medhinc_tract))
before_treatment <- diffs %>%
filter(after_2013 == 0, treatment == 1) %>%
pull(mean_log_medhinc)
before_control <- diffs %>%
filter(after_2013 == 0, treatment == 0) %>%
pull(mean_log_medhinc)
after_treatment <- diffs %>%
filter(after_2013 == 1, treatment == 1) %>%
pull(mean_log_medhinc)
after_control <- diffs %>%
filter(after_2013 == 1, treatment == 0) %>%
pull(mean_log_medhinc)
diff_treatment_before_after <- after_treatment - before_treatment
diff_control_before_after <- after_control - before_control
diff_diff <- diff_treatment_before_after - diff_control_before_after
treatment_plot_medhinc <- ggplot(data = diffs, aes(x = after_2013, y = mean_log_medhinc, color = factor(treatment))) +
geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment, yend = after_treatment - 0.031, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment - 0.031, yend = after_treatment, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Log. Medianhaushaltseinkommen vor und nach der E-Line Erweiterung - Census Tracts im Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Log. Medianhaushaltseinkommen",
color = "Gruppe",
linetype = "Effekt"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 17)
)
treatment_plot_medhinc
diffs <- appended_df %>%
group_by(after_2013, treatment) %>%
summarize(mean_low_inc_hh = mean(low_inc_hh))
before_treatment <- diffs %>%
filter(after_2013 == 0, treatment == 1) %>%
pull(mean_low_inc_hh)
before_control <- diffs %>%
filter(after_2013 == 0, treatment == 0) %>%
pull(mean_low_inc_hh)
after_treatment <- diffs %>%
filter(after_2013 == 1, treatment == 1) %>%
pull(mean_low_inc_hh)
after_control <- diffs %>%
filter(after_2013 == 1, treatment == 0) %>%
pull(mean_low_inc_hh)
diff_treatment_before_after <- after_treatment - before_treatment
diff_control_before_after <- after_control - before_control
diff_diff <- diff_treatment_before_after - diff_control_before_after
treatment_plot_low_inc <- ggplot(data = diffs, aes(x = after_2013, y = mean_low_inc_hh, color = treatment))+
geom_point(alpha = 0.7, size = 2) +
geom_line(aes(group = treatment), size = 1) +
geom_segment(aes(x = 0, xend = 1, y = before_treatment, yend = after_treatment - -0.005, linetype = "Vorhergesagter Trend ohne Erweiterung"),
size = 0.8, color = "black") +
geom_segment(aes(x = 1, xend = 1, y = after_treatment - -0.005, yend = after_treatment, linetype = "Tatsächlicher Trend mit Erweiterung"),
size = 0.8, color = "black") +
labs(
title = "Anteil einkommensschwacher Haushalte vor und nach der E-Line Erweiterung - Census Tracts im Zeitraum von 2013-2022",
x = "0 = Pre-Erweiterung; 1 = Post-Erweiterung",
y = "Anteil einkommensschwacher Haushalte (in %)",
color = "Gruppe",
linetype = "Effekt"
) +
scale_color_manual(
values = c("blue", "red"),
labels = c("Kontrolleinheiten", "Treatmenteinheiten")
) +
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1)) +
theme_fivethirtyeight() +
theme(
axis.title = element_text(size = 12),
text = element_text(family = "Rubik"),
legend.position = "top",
plot.title = element_text(size = 17)
)
treatment_plot_low_inc
packages <- c("tidycensus", "tidyverse", "tmap", "sf", "here", "MatchIt",
"optmatch", "cobalt", "readr", "modelsummary", "broom", "hrbrthemes",
"extrafont", "ggthemes", "ggplot2", "ggpubr", "rmarkdown", "Matching")
install.packages(setdiff(packages, rownames(installed.packages())), dependencies = TRUE)
lapply(packages, library, character.only = TRUE)
rm(packages)
install.packages("dplyr")
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
install.packages("dplyr")
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
library(rmarkdown)
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
library(here)
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_summary_statistics.Rmd"))
render(here("scripts/block groups/block_summary_statistics.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_summary_statistics.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_did_regressions.Rmd"))
rm(list = ls()) # Aufräumen
packages <- c("tidycensus", "tidyverse", "tmap", "sf", "here", "MatchIt",
"optmatch", "cobalt", "readr", "modelsummary", "broom", "hrbrthemes",
"extrafont", "ggthemes", "ggplot2", "ggpubr", "rmarkdown", "Matching")
install.packages(setdiff(packages, rownames(installed.packages())), dependencies = TRUE)
lapply(packages, library, character.only = TRUE)
rm(packages)
install.packages("dplyr")
library(rmarkdown)
library(here)
setwd(here())
here()
install.packages(dplyr)
install.packages("dplyr")
library(rmarkdown)
library(here)
setwd(here())
here()
render(here("scripts/block groups/block_preparation_pre-treatment.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_propensity_score_matching.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
install.packages("dplyr")
library(rmarkdown)
library(here)
setwd(here())
here()
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_summary_statistics.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_did_regressions.Rmd"))
rm(list = ls()) # Aufräumen
render(here("scripts/block groups/block_did_plots.Rmd"))
rm(list = ls()) # Aufräumen
packages <- c("tidycensus", "tidyverse", "tmap", "sf", "here", "MatchIt",
"optmatch", "cobalt", "readr", "modelsummary", "broom", "hrbrthemes",
"extrafont", "ggthemes", "ggplot2", "ggpubr", "rmarkdown", "Matching")
install.packages(setdiff(packages, rownames(installed.packages())), dependencies = TRUE)
lapply(packages, library, character.only = TRUE)
rm(packages)
library(rmarkdown)
library(here)
setwd(here())
here()
setwd(here())
here()
render(here("scripts/census tracts/tracts_preparation_pre-treatment.Rmd"))
install.packages("dplyr") ## Click "yes" to restart R session
library(rmarkdown)
library(here)
setwd(here())
here()
render(here("scripts/census tracts/tracts_preparation_pre-treatment.Rmd"))
render(here("scripts/census tracts/tracts_preparation_pre-treatment.Rmd"))
rm(list = ls()) # Cleaning environment
render(here("scripts/census tracts/tracts_propensity_score_matching.Rmd"))
rm(list = ls()) # Cleaning environment
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
install.packages("dplyr") ## Click "yes" to restart R session
install.packages("dplyr") ## Click "yes" to restart R session
library(rmarkdown)
library(here)
setwd(here())
here()
render(here("scripts/block groups/block_preparation_post-treatment.Rmd"))
rm(list = ls()) # Cleaning environment
render(here("scripts/census tracts/tracts_preparation_post-treatment.Rmd"))
rm(list = ls()) # Cleaning environment
render(here("scripts/census tracts/tracts_summary_statistics.Rmd"))
rm(list = ls()) # Cleaning environment
render(here("scripts/census tracts/tracts_did_regressions.Rmd"))
rm(list = ls()) # Cleaning environment
render(here("scripts/census tracts/tracts_did_plots.Rmd"))
rm(list = ls()) # Cleaning environment
