"data/inputs/shapefiles/metro/230711_All_K-Line_Stations/230711_All_K-Line_Stations.shp"
)
station_names <- c("e_line_stations", "a_line_stations", "b_d_line_stations", "c_line_stations", "k_line_stations")
named_stations <- map2(file_paths, station_names, ~{
station <- st_read(.x) %>%
st_transform(crs = "ESRI:102003")
crs_before <- st_crs(station)
cat("Before transformation:", crs_before$name, "\n")
assign(.y, station, envir = .GlobalEnv)
return(station)
})
View(e_line_stations)
?filter
library(tidycensus)
library(tidyverse)
library(tmap)
library(sf)
library(here)
here()
### Look at available ACS variables
v11_detailed <- load_variables(year = 2011,
dataset = "acs5") # detailed tables
v11_detailed[grep(x = v11_detailed$name, "B19013"),
c("name", "label")] # median household income of census tract
v11_detailed[grep(x = v11_detailed$name, "B23025"),
c("name", "label")] # share of unemploymed people
print(v11_detailed[grep(x = v11_detailed$name, "B07010"),
c("name", "label")], n = 150) # share of geographical higher-income mobility
print(v11_detailed[grep(x = v11_detailed$name, "B19001"),
c("name", "label")], n = 180) # share of lower-income households
print(v11_detailed[grep(x = v11_detailed$name, "B15003"),
c("name", "label")], n = 30) # share of people with higher education
la_acs_orig <- get_acs(geography = "tract", #level of geography requested
state ="006", #can use state FIPS codes as well e.g. 48
county = "037", #County FIPS codes are safer
year = 2011,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005",
"B15003_001", "B15003_022", "B15003_023", "B15003_024", "B15003_025") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
print(v11_detailed[grep(x = v11_detailed$name, "B15003"),
c("name", "label")], n = 30) # share of people with higher education
la_acs_orig <- get_acs(geography = "tract", #level of geography requested
state ="006", #can use state FIPS codes as well e.g. 48
county = "037", #County FIPS codes are safer
year = 2011,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
library(tidycensus)
library(tidyverse)
library(tmap)
library(sf)
library(here)
here()
### Look at available ACS variables
v11_detailed <- load_variables(year = 2011,
dataset = "acs5") # detailed tables
v11_detailed[grep(x = v11_detailed$name, "B19013"),
c("name", "label")] # median household income of census tract
v11_detailed[grep(x = v11_detailed$name, "B23025"),
c("name", "label")] # share of unemploymed people
print(v11_detailed[grep(x = v11_detailed$name, "B07010"),
c("name", "label")], n = 150) # share of geographical higher-income mobility
print(v11_detailed[grep(x = v11_detailed$name, "B19001"),
c("name", "label")], n = 180) # share of lower-income households
print(v11_detailed[grep(x = v11_detailed$name, "B15003"),
c("name", "label")], n = 30) # share of people with higher education
### Extract from ACS summary file data profile and detailed variables from 2013 for Los Angeles County, CA Census Tracts
la_acs_orig <- get_acs(geography = "tract", #level of geography requested
state ="006", #can use state FIPS codes as well e.g. 48
county = "037", #County FIPS codes are safer
year = 2011,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005",
"B15003_001", "B15003_022", "B15003_023", "B15003_024", "B15003_025") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
la_acs_orig <- get_acs(geography = "tract", #level of geography requested
state ="006", #can use state FIPS codes as well e.g. 48
county = "037", #County FIPS codes are safer
year = 2011,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
head(la_acs_orig)
la_acs_orig <- get_acs(geography = "tract", #level of geography requested
state ="006", #can use state FIPS codes as well e.g. 48
county = "037", #County FIPS codes are safer
year = 2011,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005") ,
geometry = T, #merge estimates to Census geographies
output = "wide")
la_acs_adj <- la_acs_orig %>%
mutate(high_inc_mobility = round(((B07010_009E + B07010_010E + B07010_011E) / B07010_001E), digits = 2)) %>%
mutate(unemployment_rate = round((B23025_005E / B23025_003E), digits = 2)) %>%
mutate(low_inc_hh = round(((B19001_002E + B19001_003E + B19001_004E + B19001_005E) / B19001_001E), digits = 2)) %>%
mutate(medhinc_tract = B19013_001E) %>%
mutate(medhinc_county = 56266) %>%
mutate(medhinc_ratio_tract = round((medhinc_tract / medhinc_county), digits = 2)) %>%
mutate(income_quintiles = cut(medhinc_ratio_tract, breaks = quantile(medhinc_ratio_tract, probs = seq(0, 1, by = 1/5), na.rm = TRUE), labels = c(1, 2, 3, 4, 5), include.lowest = TRUE)) %>%
mutate(income_quintiles = as.factor(income_quintiles))
la_acs <- la_acs_adj %>%
select(GEOID, NAME, geometry, high_inc_mobility, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles) %>%
filter(complete.cases(high_inc_mobility, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles))
la_shapefile <- st_as_sf(la_acs, coords = c("geometry"), crs = 4326)
st_write(la_shapefile, "data/outputs/la_shapefile.shp", delete_layer=TRUE)
st_write(la_shapefile, "data/outputs/la_shapefile.shp", delete_layer=TRUE)
la_shapefile <- st_read(here("data/outputs/la_shapefile.shp"))
View(la_shapefile)
View(la_shapefile)
la_shapefile <- la_shapefile %>%
select(GEOID, NAME, geometry, high_inc_mobility = hgh_nc_, unemployment_rate = unmply_, low_inc_hh = lw_nc_h,
medhinc_tract = mdhnc_t, medhinc_county = mdhnc_c, medhinc_ratio_tract = mdhnc__, income_quintiles = incm_qn)
ggplot() +
geom_sf(data = la_shapefile)
la_shapefile <- st_transform(la_shapefile, crs = "ESRI:102003")
st_crs(la_shapefile)
ggplot() +
geom_sf(data = la_shapefile, fill = "khaki")
v11_detailed <- load_variables(year = 2011,
dataset = "acs5") # detailed tables
v11_detailed[grep(x = v11_detailed$name, "B19013"),
c("name", "label")] # median household income of census tract
v11_detailed[grep(x = v11_detailed$name, "B23025"),
c("name", "label")] # share of unemploymed people
print(v11_detailed[grep(x = v11_detailed$name, "B07010"),
c("name", "label")], n = 150) # share of geographical higher-income mobility
print(v11_detailed[grep(x = v11_detailed$name, "B19001"),
c("name", "label")], n = 180) # share of lower-income households
la_acs_orig <- get_acs(geography = "block group", # level of geography requested
state ="006", # can use state FIPS codes as well e.g. 48
county = "037", # County FIPS codes are safer
year = 2017,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005") ,
geometry = T, # merge estimates to Census geographies
output = "wide")
la_blocks_2011 <- get_acs(geography = "block group", # level of geography requested
state ="006", # can use state FIPS codes as well e.g. 48
county = "037", # County FIPS codes are safer
year = 2017,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005") ,
geometry = T, # merge estimates to Census geographies
output = "wide")
la_acs_orig <- get_acs(geography = "block group", # level of geography requested
state ="006", # can use state FIPS codes as well e.g. 48
county = "037", # County FIPS codes are safer
year = 2017,
variables = c("B19013_001",
"B23025_003", "B23025_005",
"B07010_001", "B07010_009", "B07010_010", "B07010_011",
"B19001_001" , "B19001_002", "B19001_003", "B19001_004", "B19001_005") ,
geometry = T, # merge estimates to Census geographies
output = "wide")
head(la_acs_orig)
la_blocks_2011 <- la_acs_orig %>%
mutate(high_inc_mobility = round(((B07010_009E + B07010_010E + B07010_011E) / B07010_001E), digits = 2)) %>%
mutate(unemployment_rate = round((B23025_005E / B23025_003E), digits = 2)) %>%
mutate(low_inc_hh = round(((B19001_002E + B19001_003E + B19001_004E + B19001_005E) / B19001_001E), digits = 2)) %>%
mutate(medhinc_tract = B19013_001E) %>%
mutate(medhinc_county = 55909) %>%
mutate(medhinc_ratio_tract = round((medhinc_tract / medhinc_county), digits = 2)) %>%
mutate(income_quintiles = cut(medhinc_ratio_tract, breaks = quantile(medhinc_ratio_tract, probs = seq(0, 1, by = 1/5), na.rm = TRUE), labels = c(1, 2, 3, 4, 5), include.lowest = TRUE)) %>%
mutate(income_quintiles = as.factor(income_quintiles))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, high_inc_mobility, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles) %>%
filter(complete.cases(high_inc_mobility, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles))
la_blocks_2011 <- la_acs_orig %>%
mutate(high_inc_mobility = round(((B07010_009E + B07010_010E + B07010_011E) / B07010_001E), digits = 2)) %>%
mutate(unemployment_rate = round((B23025_005E / B23025_003E), digits = 2)) %>%
mutate(low_inc_hh = round(((B19001_002E + B19001_003E + B19001_004E + B19001_005E) / B19001_001E), digits = 2)) %>%
mutate(medhinc_tract = B19013_001E) %>%
mutate(medhinc_county = 55909) %>%
mutate(medhinc_ratio_tract = round((medhinc_tract / medhinc_county), digits = 2)) %>%
mutate(income_quintiles = cut(medhinc_ratio_tract, breaks = quantile(medhinc_ratio_tract, probs = seq(0, 1, by = 1/5), na.rm = TRUE), labels = c(1, 2, 3, 4, 5), include.lowest = TRUE)) %>%
mutate(income_quintiles = as.factor(income_quintiles))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, high_inc_mobility, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles) %>%
filter(complete.cases(high_inc_mobility, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles))
la_blocks_2011 <- la_acs_orig %>%
mutate(high_inc_mobility = round(((B07010_009E + B07010_010E + B07010_011E) / B07010_001E), digits = 2)) %>%
mutate(unemployment_rate = round((B23025_005E / B23025_003E), digits = 2)) %>%
mutate(low_inc_hh = round(((B19001_002E + B19001_003E + B19001_004E + B19001_005E) / B19001_001E), digits = 2)) %>%
mutate(medhinc_tract = B19013_001E) %>%
mutate(medhinc_county = 55909) %>%
mutate(medhinc_ratio_tract = round((medhinc_tract / medhinc_county), digits = 2)) %>%
mutate(income_quintiles = cut(medhinc_ratio_tract, breaks = quantile(medhinc_ratio_tract, probs = seq(0, 1, by = 1/5), na.rm = TRUE), labels = c(1, 2, 3, 4, 5), include.lowest = TRUE)) %>%
mutate(income_quintiles = as.factor(income_quintiles))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles) %>%
filter(complete.cases(unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles))
la_blocks_2011 <- st_as_sf(la_blocks_2011, coords = c("geometry"), crs = 4326)
st_write(la_blocks_2011, "data/outputs/la_blocks_2011.shp", delete_layer=TRUE)
la_blocks_2011 <- st_read(here("data/outputs/la_blocks_2011.shp"))
View(la_blocks_2011)
la_blocks_2011 <- la_acs_orig %>%
mutate(high_inc_mobility = round(((B07010_009E + B07010_010E + B07010_011E) / B07010_001E), digits = 2)) %>%
mutate(unemployment_rate = round((B23025_005E / B23025_003E), digits = 2)) %>%
mutate(low_inc_hh = round(((B19001_002E + B19001_003E + B19001_004E + B19001_005E) / B19001_001E), digits = 2)) %>%
mutate(medhinc_tract = B19013_001E) %>%
mutate(medhinc_county = 56266) %>%
mutate(medhinc_ratio_tract = round((medhinc_tract / medhinc_county), digits = 2)) %>%
mutate(income_quintiles = cut(medhinc_ratio_tract, breaks = quantile(medhinc_ratio_tract, probs = seq(0, 1, by = 1/5), na.rm = TRUE), labels = c(1, 2, 3, 4, 5), include.lowest = TRUE)) %>%
mutate(income_quintiles = as.factor(income_quintiles))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles) %>%
filter(complete.cases(unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles))
la_blocks_2011 <- st_as_sf(la_blocks_2011, coords = c("geometry"), crs = 4326)
st_write(la_blocks_2011, "data/outputs/la_blocks_2011.shp", delete_layer=TRUE)
la_blocks_2011 <- st_read(here("data/outputs/la_blocks_2011.shp"))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, high_inc_mobility = hgh_nc_, unemployment_rate = unmply_, low_inc_hh = lw_nc_h,
medhinc_tract = mdhnc_t, medhinc_county = mdhnc_c, medhinc_ratio_tract = mdhnc__, income_quintiles = incm_qn)
View(la_blocks_2011)
la_blocks_2011 <- la_acs_orig %>%
mutate(high_inc_mobility = round(((B07010_009E + B07010_010E + B07010_011E) / B07010_001E), digits = 2)) %>%
mutate(unemployment_rate = round((B23025_005E / B23025_003E), digits = 2)) %>%
mutate(low_inc_hh = round(((B19001_002E + B19001_003E + B19001_004E + B19001_005E) / B19001_001E), digits = 2)) %>%
mutate(medhinc_tract = B19013_001E) %>%
mutate(medhinc_county = 56266) %>%
mutate(medhinc_ratio_tract = round((medhinc_tract / medhinc_county), digits = 2)) %>%
mutate(income_quintiles = cut(medhinc_ratio_tract, breaks = quantile(medhinc_ratio_tract, probs = seq(0, 1, by = 1/5), na.rm = TRUE), labels = c(1, 2, 3, 4, 5), include.lowest = TRUE)) %>%
mutate(income_quintiles = as.factor(income_quintiles))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles) %>%
filter(complete.cases(unemployment_rate, low_inc_hh,
medhinc_tract, medhinc_county, medhinc_ratio_tract, income_quintiles))
la_blocks_2011 <- st_as_sf(la_blocks_2011, coords = c("geometry"), crs = 4326)
st_write(la_blocks_2011, "data/outputs/la_blocks_2011.shp", delete_layer=TRUE)
la_blocks_2011 <- st_read(here("data/outputs/la_blocks_2011.shp"))
la_blocks_2011 <- la_blocks_2011 %>%
select(GEOID, NAME, geometry, unemployment_rate = unmply_, low_inc_hh = lw_nc_h, medhinc_tract = mdhnc_t,
medhinc_county = mdhnc_c, medhinc_ratio_tract = mdhnc__, income_quintiles = incm_qn)
ggplot() +
geom_sf(data = la_blocks_2011)
st_crs(la_blocks_2011)
la_blocks_2011 <- st_transform(la_blocks_2011, crs = "ESRI:102003")
st_crs(la_blocks_2011)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki")
station_names <- c("e_line_stations", "a_line_stations", "b_d_line_stations", "c_line_stations", "k_line_stations")
file_paths <- c(
"data/inputs/shapefiles/metro/230711_All_E-Line_Stations_Post_RC/230711_All_E-Line_Stations_Post_RC.shp",
"data/inputs/shapefiles/metro/230711_All_A-Line_Stations_Post_RC/230711_All_A-Line_Stations_Post_RC.shp",
"data/inputs/shapefiles/metro/802_805_RedPurple_Stations_0316/RedPurpleLine0316.shp",
"data/inputs/shapefiles/metro/803_Green_Stations_0316/GreenLine0316.shp",
"data/inputs/shapefiles/metro/230711_All_K-Line_Stations/230711_All_K-Line_Stations.shp"
)
station_names <- c("e_line_stations", "a_line_stations", "b_d_line_stations", "c_line_stations", "k_line_stations")
named_stations <- map2(file_paths, station_names, ~{
station <- st_read(.x) %>%
st_transform(crs = "ESRI:102003")
crs_before <- st_crs(station)
cat("Before transformation:", crs_before$name, "\n")
assign(.y, station, envir = .GlobalEnv)
return(station)
})
View(e_line_stations)
View(e_line_stations)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "burlywood3") +
geom_sf(data = e_line_stations, fill = "darkorange") +
geom_sf(data = a_line_stations, fill = "lightblue") +
geom_sf(data = b_d_line_stations, fill = "purple") +
geom_sf(data = c_line_stations, fill = "springgreen") +
geom_sf(data = k_line_stations, fill = "lightcoral")
View(e_line_stations)
View(e_line_stations)
View(e_line_stations)
e_line_stations <- e_line_stations %>%
filter(STOP_ID %in% (80123:80132))
View(e_line_stations)
named_stations <- map2(file_paths, station_names, ~{
station <- st_read(.x) %>%
st_transform(crs = "ESRI:102003")
crs_before <- st_crs(station)
cat("Before transformation:", crs_before$name, "\n")
assign(.y, station, envir = .GlobalEnv)
return(station)
})
new_e_line_stations <- e_line_stations %>%
filter(STOP_ID %in% (80123:80132))
new_stations <- e_line_stations %>%
filter(STOP_ID %in% (80123:80132))
la_blocks_centroids <- st_centroid(la_blocks_2011)
ggplot() +
geom_sf(data = la_blocks_centroids)
buffer_stations_500 <- st_buffer(new_stations, dist = 500)
ggplot() +
geom_sf(data = buffer_stations_500)
buffer_stations_800 <- st_buffer(new_stations, dist = 800)
ggplot() +
geom_sf(data = buffer_stations_800)
buffer_stations_1000 <- st_buffer(new_stations, dist = 1000)
ggplot() +
geom_sf(data = buffer_stations_1000)
buffer500_centroids_intersect <- buffer_stations_500 %>%
st_join(., la_blocks_centroids, join = st_intersects)
buffer800_centroids_intersect <- buffer_stations_800 %>%
st_join(., la_blocks_centroids, join = st_intersects)
buffer1000_centroids_intersect <- buffer_stations_1000 %>%
st_join(., la_blocks_centroids, join = st_intersects)
View(buffer800_centroids_intersect)
buffer500_centroids_intersect <- buffer_stations_500 %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
group(income_quintile)
buffer500_centroids_intersect <- buffer_stations_500 %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
group_by(income_quintile)
buffer500_centroids_intersect <- buffer_stations_500 %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
group_by(income_quintiles)
buffer800_centroids_intersect <- buffer_stations_800 %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
group_by(income_quintiles)
buffer1000_centroids_intersect <- buffer_stations_1000 %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
group_by(income_quintiles)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki") +
geom_sf(data = buffer_stations, fill = "blue") +
geom_sf(data = la_blocks_centroids, fill = NA, color = "black")
buffer_stations <- st_buffer(new_stations, dist = 800)
ggplot() +
geom_sf(data = buffer_stations)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki") +
geom_sf(data = buffer_stations, fill = "blue") +
geom_sf(data = la_blocks_centroids, fill = NA, color = "black")
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki") +
geom_sf(data = buffer_stations, fill = "blue") +
geom_sf(data = la_blocks_centroids, fill = NA, color = "black", alpha = 0.125)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki") +
geom_sf(data = buffer_stations, fill = "blue") +
geom_sf(data = la_blocks_centroids, fill = NA, color = "black", alpha = 0.05)
e_buffer_stations <- st_buffer(new_stations, dist = 800)
ggplot() +
geom_sf(data = e_buffer_stations)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki") +
geom_sf(data = e_buffer_stations, fill = "blue") +
geom_sf(data = la_blocks_centroids, fill = NA, color = "black", alpha = 0.05)
buffer_centroids_intersect <- e_buffer_stations %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
group_by(income_quintiles)
e_buffer_stations <- st_buffer(new_stations, dist = 800)
a_buffer_stations <- st_buffer(a_line_stations, dist = 800)
b_d_buffer_stations <- st_buffer(b_d_line_stations, dist = 800)
c_buffer_stations <- st_buffer(c_line_stations, dist = 800)
ggplot() +
geom_sf(data = a_buffer_stations)
ggplot() +
geom_sf(data = b_d_buffer_stations)
ggplot() +
geom_sf(data = c_buffer_stations)
View(buffer_centroids_intersect)
View(la_blocks_centroids)
centroids_not_within_other <- la_blocks_centroids %>%
filter(
!st_intersects(., a_stations_buffer) &
!st_intersects(., b_d_stations_buffer) &
!st_intersects(., c_stations_buffer))
e_stations_buffer <- st_buffer(new_stations, dist = 800)
a_stations_buffer <- st_buffer(a_line_stations, dist = 800)
b_d_stations_buffer <- st_buffer(b_d_line_stations, dist = 800)
c_stations_buffer <- st_buffer(c_line_stations, dist = 800)
ggplot() +
geom_sf(data = e_stations_buffer)
ggplot() +
geom_sf(data = a_stations_buffer)
ggplot() +
geom_sf(data = b_d_stations_buffer)
ggplot() +
geom_sf(data = c_stations_buffer)
ggplot() +
geom_sf(data = la_blocks_2011, fill = "khaki") +
geom_sf(data = e_stations_buffer, fill = "blue") +
geom_sf(data = la_blocks_centroids, fill = NA, color = "black", alpha = 0.05)
buffer_centroids_intersect <- e_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects)
centroids_not_within_other <- la_blocks_centroids %>%
filter(
!st_intersects(., a_stations_buffer) &
!st_intersects(., b_d_stations_buffer) &
!st_intersects(., c_stations_buffer))
# Filter centroids not within a_stations_buffer, b_d_stations_buffer, and c_stations_buffer
centroids_not_within_other <- la_blocks_centroids %>%
filter(
is_empty(st_intersection(., a_stations_buffer)) &
is_empty(st_intersection(., b_d_stations_buffer)) &
is_empty(st_intersection(., c_stations_buffer))
)
buffer_centroids_intersect <- buffer_centroids_intersect %>%
filter(
!st_intersects(., a_stations_buffer) &
!st_intersects(., b_d_stations_buffer) &
!st_intersects(., c_stations_buffer)
)
View(la_blocks_2011)
?st_
?st_intersects
?st_join
not_buffer_centroids_intersect <- la_blocks_centroids %>%
filter(
!st_within(., a_stations_buffer) &
!st_within(., b_d_stations_buffer) &
!st_within(., c_stations_buffer)
)
rlang::last_trace()
rlang::last_trace()
rlang::last_trace()
rlang::last_trace()
buffer_centroids_intersect_e <- e_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects)
buffer_centroids_intersect_a <- a_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects)
buffer_centroids_intersect_b_d <- b_d_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects)
buffer_centroids_intersect_c <- c_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects)
View(buffer_centroids_intersect_a)
not_within_other_buffers <- anti_join(buffer_centroids_intersect_e, buffer_centroids_intersect_a, by = "NAME")
?st_join
not_within_other_buffers <- !st_join(buffer_centroids_intersect_e, buffer_centroids_intersect_a, by = "NAME")
not_within_other_buffers <- !st_join(buffer_centroids_intersect_e, buffer_centroids_intersect_a, join = st_intersects)
buffer_centroids_intersect_e <- e_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
mutate(metro_line = e_line)
buffer_centroids_intersect_e <- e_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
mutate(metro_line = "e_line")
buffer_centroids_intersect_a <- a_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
mutate(metro_line = "a_line")
buffer_centroids_intersect_b_d <- b_d_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
mutate(metro_line = "b_d_line")
buffer_centroids_intersect_c <- c_stations_buffer %>%
st_join(., la_blocks_centroids, join = st_intersects) %>%
mutate(metro_line = "c_line")
?bind_rows
combined_df <- bind_rows(buffer_centroids_intersect_a, buffer_centroids_intersect_b_d, buffer_centroids_intersect_c, buffer_centroids_intersect_e)
View(combined_df)
combined_df <- combined_df %>%
group_by(NAME)
View(combined_df)
View(buffer_centroids_intersect_b_d)
combined_df <- combined_df %>%
group_by(GEOID)
View(buffer_centroids_intersect_b_d)
dfs <- list(buffer_centroids_intersect_e, buffer_centroids_intersect_e, buffer_centroids_intersect_e, buffer_centroids_intersect_e)
# Perform inner join on NAME variable
same_name_observation <- reduce(dfs, inner_join, by = "NAME")
# Create a list of data frames
dfs <- list(buffer_centroids_intersect_e, buffer_centroids_intersect_a, buffer_centroids_intersect_b_d, buffer_centroids_intersect_c)
# Combine the data frames into one
combined_df <- bind_rows(dfs, .id = "source")
# Filter for unique observations based on the "NAME" variable
unique_observations <- combined_df %>%
group_by(NAME) %>%
filter(n() == 1) %>%
ungroup()
View(unique_observations)
unique_observations_e <- unique_observations %>%
filter(metro_line == "e_line")
View(unique_observations_e)
View(unique_observations_e)
View(unique_observations_e)
unique_observations_e <- unique_observations %>%
filter(metro_line == "e_line") %>%
filter(income_quintiles %% c(1, 2))
unique_observations_e <- unique_observations %>%
filter(metro_line == "e_line") %>%
filter(income_quintiles %% c(1:2))
unique_observations_e <- unique_observations %>%
filter(metro_line == "e_line") %>%
filter(income_quintiles == 1 | income_quintiles == 2)
View(unique_observations_e)
savehistory(file = "history_file.Rhistory")
